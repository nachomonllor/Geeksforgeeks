
https://practice.geeksforgeeks.org/problems/longest-increasing-subarray/0/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication51
{
    class Program
    {



        static int LengthOfLongestIncreasingSubarray(int[] arr)
        {

            int len = 1;
            int maxLen = 1;

            for (int i = 1; i < arr.Length; i++)
            {
                if (arr[i] <= arr[i - 1])
                {
                    maxLen = Math.Max(maxLen, len);
                    len = 0;
                }
                len++;
            }

            return Math.Max(maxLen, len); 

        }


        static void Main(string[] args)
        {

            //int t = int.Parse(Console.ReadLine().Trim());

            //while (t-- > 0)
            //{
            //    int n = int.Parse(Console.ReadLine().Trim());

            //    int[] arr = Array.ConvertAll(Console.ReadLine().Trim().Split(' '), e => int.Parse(e));

            //    Console.WriteLine(LengthOfLongestIncreasingSubarray(arr));
            //}

            int[] arr = { 4336, 1258, 3516, 5057 };

            Console.WriteLine(LengthOfLongestIncreasingSubarray(arr));



            Console.ReadLine();

        }
    }
}
