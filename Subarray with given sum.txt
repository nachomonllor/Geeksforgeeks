
https://practice.geeksforgeeks.org/problems/subarray-with-given-sum-1587115621/1?page=1&category[]=Arrays&sortBy=submissions


 public static List<int> subarraySum(int[] arr, int n, long s)
        {
            // cur_sum to keep track of cumulative sum till that
            // point
            long cur_sum = 0;
            int start = 0;
            int end = -1;
            Dictionary<long, int> hashMap = new Dictionary<long, int>();

            for (int i = 0; i < n; i++)
            {
                cur_sum = cur_sum + arr[i];
                // check whether cur_sum - sum = 0, if 0 it
                // means the sub array is starting from index 0-
                // so stop
                if (cur_sum - s == 0)
                {
                    start = 0;
                    end = i;
                    break;
                }
                // if hashMap already has the value, means we
                // already
                // have subarray with the sum - so stop
                if (hashMap.ContainsKey(cur_sum - s))
                {
                    start = hashMap[cur_sum - s] + 1;
                    end = i;
                    break;
                }

                // if value is not present then add to hashmap
                hashMap[cur_sum] = i;
            }

            if (end == -1)
            {
                return new List<int> { -1 };
            }
            else
            {
                return new List<int> { start + 1, end + 1 };
            }
        }
