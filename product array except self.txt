
https://practice.geeksforgeeks.org/problems/product-array-puzzle4525/1/?category[]=Arrays&problemStatus=unsolved&difficulty[]=0&page=2&query=category[]ArraysproblemStatusunsolveddifficulty[]0page2

// { Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

vector<long long int> productExceptSelf(vector<long long int>&, int );

// your code will be pasted here

int main()
 {
    int t;  // number of test cases
    cin>>t;
    while(t--)
    {
        int n;  // size of the array
        cin>>n;
        vector<long long int> arr(n),vec(n);
        
        for(int i=0;i<n;i++)    // input the array
        {
            cin>>arr[i];
        }
        
        vec = productExceptSelf(arr,n);   // function call
        
        for(int i=0;i<n;i++)    // print the output
        {
            cout << vec[i] << " ";
        }
        cout<<endl;
    }
	return 0;
}// } Driver Code Ends


//User function template for C++

// nums: given vector
// return the Product vector P that hold product except self at each index
vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
   
    //code here  
    vector<long long int> izq;
    for (int i = 0; i < nums.size(); i++) {
        izq.push_back(0);
    }
    vector<long long int> der;
    for (int i = 0; i < nums.size(); i++) {
        der.push_back(0);
    }

    long long int prod = 1;
    for (int i = 0; i < n; i++) {
        
        izq[i] = prod;
        prod *= nums[i];
    }

    prod = 1;
    for (int i = n - 1; i >= 0; i--) {
        
        der[i] = prod;
        prod *= nums[i];
    }

    /*
    for (int i = 0; i < n; i++) {
        cout << izq[i] << " ";
    }

    cout << "\n";
    for (int i = 0; i < n; i++) {
        cout << der[i] << " ";
    }

    cout << "\n";
    */
    vector<long long int> v;

    for (int i = 0; i < n; i++) {
        v.push_back(izq[i] * der[i]);
    }

    return v;
    
}